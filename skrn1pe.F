************************************************************************
*     -------------------------------------
      SUBROUTINE SKRN1PE(PE1)
*     -------------------------------------
*
*     (Purpose)
*        Make One-photoelectron distributed photoelectron number
*
*     (Input)
*        None
*
*     (Output)
*        PE1 ; random number in one-photo-electron distribution 
*     
*
*     (Creation Date and Author)
*       1992.06.16 ; First version by K.S.Hirata
*       1996.06.19 ; modified for SK by K.Ishihara
*       2003.01.17 ; merged by Y.Koshio
*
************************************************************************
      
      implicit none

#include "skdetsim_parm.h"

      integer i
      real PE1, x

C --- 1 p.e. distriburion for SK

      real QPE0(-50:449), q1(50), q2(50), q3(50), q4(50), q5(50)
      real q6(50), q7(50), q8(50), q9(50), q10(50)

      EQUIVALENCE (QPE0(-50),Q1(1)), (QPE0(0),Q2(1)),
     & (QPE0(50),Q3(1)),(QPE0(100),Q4(1)), (QPE0(150),Q5(1)),
     & (QPE0(200),Q6(1)),(QPE0(250),Q7(1)),(QPE0(300),Q8(1)),
     & (QPE0(350),Q9(1)),(QPE0(400),Q10(1))

      DATA q1 /0.000000,0.000000,0.000000,0.000000,0.000000,
     & 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 
     & 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 
     & 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 
     & 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 
     & 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 
     & 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 
     & 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 
     & 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 
     & 0.000000, 0.000000, 0.000000, 0.000789, 0.005203/ 

      DATA q2 / 0.050159, 0.108876, 0.169950, 0.214746, 0.250608, 
     & 0.275156, 0.301596, 0.320989, 0.346262, 0.363886, 
     & 0.380008, 0.397537, 0.416048, 0.434980, 0.455785, 
     & 0.476522, 0.498061, 0.520164, 0.542798, 0.566903, 
     & 0.590353, 0.613072, 0.635728, 0.657582, 0.679424, 
     & 0.701448, 0.722235, 0.741481, 0.760019, 0.778211, 
     & 0.794346, 0.810327, 0.825057, 0.838683, 0.851419, 
     & 0.862698, 0.873142, 0.883208, 0.891947, 0.899694, 
     & 0.907143, 0.913462, 0.919213, 0.924362, 0.929029, 
     & 0.933306, 0.936854, 0.940372, 0.943497, 0.946387/ 

      DATA q3/ 0.948858, 0.951274, 0.953281, 0.955141, 0.956962, 
     & 0.958500, 0.959790, 0.961147, 0.962551, 0.963593, 
     & 0.964642, 0.965668, 0.966518, 0.967389, 0.968204, 
     & 0.968973, 0.969700, 0.970398, 0.971095, 0.971686, 
     & 0.972362, 0.972943, 0.973482, 0.974069, 0.974588, 
     & 0.975079, 0.975568, 0.975949, 0.976360, 0.976758, 
     & 0.977144, 0.977485, 0.977932, 0.978323, 0.978707, 
     & 0.979056, 0.979418, 0.979809, 0.980192, 0.980537, 
     & 0.980908, 0.981206, 0.981468, 0.981723, 0.982044, 
     & 0.982343, 0.982646, 0.982934, 0.983176, 0.983427/ 

      DATA q4/ 0.983662, 0.983961, 0.984232, 0.984487, 0.984732, 
     & 0.984935, 0.985150, 0.985385, 0.985603, 0.985800, 
     & 0.986049, 0.986236, 0.986466, 0.986658, 0.986863, 
     & 0.987062, 0.987229, 0.987421, 0.987616, 0.987855, 
     & 0.988052, 0.988205, 0.988414, 0.988602, 0.988725, 
     & 0.988910, 0.989130, 0.989288, 0.989407, 0.989543, 
     & 0.989653, 0.989845, 0.989989, 0.990132, 0.990281, 
     & 0.990393, 0.990490, 0.990595, 0.990698, 0.990841, 
     & 0.990973, 0.991123, 0.991272, 0.991397, 0.991518, 
     & 0.991624, 0.991741, 0.991862, 0.991983, 0.992091/ 
	 
      DATA q5/ 0.992215, 0.992348, 0.992477, 0.992564, 0.992692, 
     & 0.992795, 0.992891, 0.992987, 0.993079, 0.993154, 
     & 0.993234, 0.993309, 0.993416, 0.993489, 0.993579, 
     & 0.993688, 0.993843, 0.993957, 0.994044, 0.994155, 
     & 0.994266, 0.994392, 0.994476, 0.994567, 0.994637, 
     & 0.994713, 0.994819, 0.994879, 0.994958, 0.995026, 
     & 0.995108, 0.995205, 0.995305, 0.995396, 0.995462, 
     & 0.995532, 0.995636, 0.995675, 0.995739, 0.995851, 
     & 0.995927, 0.995990, 0.996046, 0.996100, 0.996173, 
     & 0.996219, 0.996267, 0.996316, 0.996379, 0.996438/ 

      DATA q6/ 0.996501, 0.996559, 0.996618, 0.996662, 0.996702, 
     & 0.996767, 0.996840, 0.996887, 0.996914, 0.996998, 
     & 0.997041, 0.997090, 0.997129, 0.997178, 0.997229, 
     & 0.997274, 0.997321, 0.997355, 0.997401, 0.997432, 
     & 0.997473, 0.997526, 0.997565, 0.997604, 0.997634, 
     & 0.997677, 0.997714, 0.997742, 0.997766, 0.997836, 
     & 0.997852, 0.997884, 0.997913, 0.997919, 0.997940, 
     & 0.997976, 0.998041, 0.998091, 0.998127, 0.998141, 
     & 0.998174, 0.998210, 0.998241, 0.998256, 0.998277, 
     & 0.998309, 0.998329, 0.998362, 0.998398, 0.998429/

      DATA q7/ 0.998462, 0.998494, 0.998533, 0.998574, 0.998606, 
     & 0.998623, 0.998641, 0.998664, 0.998692, 0.998705, 
     & 0.998719, 0.998733, 0.998763, 0.998779, 0.998814, 
     & 0.998823, 0.998837, 0.998851, 0.998858, 0.998877, 
     & 0.998890, 0.998907, 0.998914, 0.998937, 0.998953, 
     & 0.998981, 0.998994, 0.999002, 0.999026, 0.999048, 
     & 0.999053, 0.999070, 0.999080, 0.999092, 0.999103, 
     & 0.999120, 0.999133, 0.999143, 0.999157, 0.999176, 
     & 0.999193, 0.999210, 0.999233, 0.999244, 0.999256, 
     & 0.999264, 0.999280, 0.999294, 0.999314, 0.999324/ 

      DATA q8/ 0.999344, 0.999356, 0.999372, 0.999374, 0.999391, 
     & 0.999399, 0.999408, 0.999418, 0.999423, 0.999434, 
     & 0.999442, 0.999454, 0.999461, 0.999472, 0.999480, 
     & 0.999488, 0.999502, 0.999501, 0.999519, 0.999543, 
     & 0.999544, 0.999547, 0.999559, 0.999567, 0.999571, 
     & 0.999592, 0.999595, 0.999600, 0.999604, 0.999610, 
     & 0.999615, 0.999618, 0.999620, 0.999620, 0.999621, 
     & 0.999625, 0.999641, 0.999644, 0.999651, 0.999657, 
     & 0.999661, 0.999660, 0.999660, 0.999669, 0.999674, 
     & 0.999676, 0.999677, 0.999684, 0.999688, 0.999706/ 

      DATA q9/ 0.999708, 0.999713, 0.999712, 0.999711, 0.999713, 
     & 0.999719, 0.999721, 0.999726, 0.999726, 0.999728, 
     & 0.999736, 0.999742, 0.999744, 0.999746, 0.999748, 
     & 0.999752, 0.999753, 0.999758, 0.999764, 0.999763, 
     & 0.999766, 0.999772, 0.999774, 0.999786, 0.999788, 
     & 0.999791, 0.999800, 0.999808, 0.999821, 0.999819, 
     & 0.999822, 0.999825, 0.999824, 0.999826, 0.999833, 
     & 0.999831, 0.999833, 0.999836, 0.999839, 0.999842, 
     & 0.999848, 0.999851, 0.999851, 0.999856, 0.999863, 
     & 0.999861, 0.999860, 0.999863, 0.999865, 0.999866/ 

      DATA q10/ 0.999866, 0.999866, 0.999872, 0.999871, 0.999874, 
     & 0.999876, 0.999880, 0.999883, 0.999882, 0.999888, 
     & 0.999887, 0.999887, 0.999889, 0.999892, 0.999891, 
     & 0.999891, 0.999891, 0.999891, 0.999891, 0.999894, 
     & 0.999896, 0.999903, 0.999905, 0.999905, 0.999907, 
     & 0.999910, 0.999920, 0.999920, 0.999919, 0.999921, 
     & 0.999928, 0.999927, 0.999930, 0.999932, 0.999938, 
     & 0.999940, 0.999944, 0.999950, 0.999953, 0.999955, 
     & 0.999965, 0.999974, 0.999983, 0.999983, 0.999983, 
     & 0.999983, 0.999986, 0.999989, 0.999991, 1.000000/ 

		
C      X = RNDM(DUM)
      call grndm(x,1)
      DO 10 I=-50,449
         IF(X.LE.QPE0(I)) GOTO 20
 10   CONTINUE 

 20   continue
C     DS_TUNE              Tuning in DS routines
C     (INTEGER*4)          = LE_TUNE (= 1)  LE group tuning         
C                          = AP_TUNE (= 2)  ATMPD group tuning 
      if((DS_TUNE.eq.LE_TUNE) .or. (DS_TUNE .eq. UNI_TUNE)) then
         PE1 = FLOAT(I)/20.550
      else if(DS_TUNE.eq.AP_TUNE) then
         PE1 = FLOAT(I)/19.9113/1.08
      else
         write(*,*) 'SKRN1PE: Not Supported DS_TUNE',DS_TUNE
         stop
      endif

C ---

      RETURN
      END
